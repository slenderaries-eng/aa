name: CI

on:
  push: { branches: [ "main" ] }
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      - run: npm ci
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with: { name: web-build, path: dist/** }

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      - run: npm ci
      - run: npm test -- --coverage --watch=false
      - uses: actions/upload-artifact@v4
        with: { name: coverage, path: coverage/** }

  security:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with: { languages: javascript }
      - uses: github/codeql-action/analyze@v3

  deploy_staging:
    runs-on: ubuntu-latest
    needs: [test, security]
    environment:
      name: staging
      url: https://staging.example.com
    steps:
      - run: echo "Deploy to staging"
      # сюда — команда деплоя (kubectl/ssh/vercel/etc.)

  deploy_prod:
    runs-on: ubuntu-latest
    needs: [deploy_staging]
    environment:
      name: production
      url: https://example.com
    # защита: prod доступен только из main и только с аппрувом среды
    if: github.ref == 'refs/heads/main'
    steps:
      - run: echo "Deploy to production"
